flowchart TB
    %% Define node styles
    classDef userClass fill:#e1f5fe,stroke:#333,stroke-width:2px,font-size:12px,color:#000
    classDef lambdaClass fill:#fff3e0,stroke:#333,stroke-width:2px,font-size:12px,color:#000
    classDef storageClass fill:#f3e5f5,stroke:#333,stroke-width:2px,font-size:12px,color:#000
    classDef eventClass fill:#e8f5e8,stroke:#333,stroke-width:2px,font-size:12px,color:#000
    classDef algorithmClass fill:#fff8e1,stroke:#333,stroke-width:2px,font-size:12px,color:#000
    classDef dbClass fill:#fce4ec,stroke:#333,stroke-width:2px,font-size:12px,color:#000
    
    %% External Components
    User["Client User<br/>Submits & Retrieves Documents"] 
    S3Up["S3 Bucket (uploads/)<br/>Document Upload Storage"] 
    S3Enc["S3 Bucket (encrypted/)<br/>Encrypted Document Storage"] 
    
    %% Core Services
    Store["Store Lambda Function<br/>Encrypts Documents & Manages Keys"] 
    Retrieve["Retrieve Lambda Function<br/>Decrypts & Returns Documents"] 
    DB[("PostgreSQL Database<br/>Key & Metadata Storage")] 
    KMS["AWS KMS Service<br/>Key Management Service"] 
    
    %% Event Flow
    Event{"S3 Event Notification<br/>Triggered on File Upload"} 
    
    %% Flow Connections
    User -->|"1. Upload Document"| S3Up
    User -->|"6. Request Decryption"| Retrieve
    
    %% Automatic Encryption Flow
    S3Up -->|"2. Triggers Event"| Event
    Event -->|"3. Invokes Lambda"| Store
    Store -->|"4a. Store Key Data"| DB
    Store -->|"4b. Secure Private Key"| KMS
    Store -->|"5. Store Encrypted Doc"| S3Enc
    
    %% Decryption Flow
    Retrieve -->|"7a. Fetch Key Data"| DB
    Retrieve -->|"7b. Retrieve Encrypted Doc"| S3Enc
    Retrieve -->|"8. Return Decrypted Doc"| User
    
    %% Algorithm Details
    subgraph Algo ["Crypto Algorithms"]
        Kyber["Kyber<br/>Post-Quantum Cryptography"]
        AES["AES<br/>Symmetric Encryption"]
        Kyber --> AES
    end
    Store -.-> Algo
    Retrieve -.-> Algo
    
    %% Database Schema
    subgraph DBSchema ["Database Tables"]
        Keys["Keys Table"]
        Logs["Logs Table"]
        Rots["Rotations Table"]
        Keys -.-> Logs
        Keys -.-> Rots
    end
    DB -.-> DBSchema
    
    %% Apply styles to nodes
    class User userClass
    class Store,Retrieve lambdaClass
    class S3Up,S3Enc,DB,KMS storageClass
    class Event eventClass
    class Kyber,AES algorithmClass
    class Keys,Logs,Rots dbClass