graph TB
    %% Define node styles
    classDef userClass fill:#e1f5fe,stroke:#333,stroke-width:2px
    classDef apiClass fill:#fff3e0,stroke:#333,stroke-width:2px
    classDef lambdaClass fill:#ffecb3,stroke:#333,stroke-width:2px
    classDef storageClass fill:#f3e5f5,stroke:#333,stroke-width:2px
    classDef dbClass fill:#fce4ec,stroke:#333,stroke-width:2px
    classDef algorithmClass fill:#fff8e1,stroke:#333,stroke-width:2px
    classDef vpcClass fill:#e8f5e8,stroke:#333,stroke-width:2px

    %% External Components
    User[Client Applications]

    %% API Layer
    API[API Gateway REST API]

    %% Core Processing
    Lambda[Unified Lambda Function]

    %% Storage Layer
    S3[S3 Encrypted Documents]
    KMS[AWS KMS Backup Keys]

    %% Isolated Database (The "Oh Shit Button")
    subgraph VPC [Isolated VPC]
        DB[(PostgreSQL Database)]
        subgraph DBTables [Critical Backup Store]
            Keys[Private Keys Backup]
            Logs[Audit Trail]
            Metadata[Document Metadata]
        end
    end

    %% Crypto Implementation
    subgraph Crypto [Post-Quantum Cryptography]
        Kyber[ML-KEM-768 Key Encapsulation]
        AES[AES-256-CBC Encryption]
        Kyber --> AES
    end

    %% Main Flow
    User -->|HTTPS REST API| API
    API -->|Invoke| Lambda
    Lambda -->|Encrypt/Decrypt| S3
    Lambda -->|Backup Keys| KMS
    Lambda -->|Critical Backup| DB
    Lambda -.->|Uses| Crypto

    %% Database Relations
    DB -.-> DBTables

    %% Disaster Recovery Flow
    Lambda -.->|"Oh No Button"<br/>Key Recovery| Keys

    %% Apply styles
    class User userClass
    class API apiClass
    class Lambda lambdaClass
    class S3,KMS storageClass
    class DB,Keys,Logs,Metadata dbClass
    class Kyber,AES algorithmClass
    class VPC,DBTables vpcClass
